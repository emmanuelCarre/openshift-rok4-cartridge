#!/bin/bash

source $OPENSHIFT_CARTRIDGE_SDK_BASH

NGINX_BIN_DIR=/usr/nginx12-1.2.3/sbin/
NGINX_EXEC=$NGINX_BIN_DIR/nginx
NGINX_CONFIG_FILE=$OPENSHIFT_ROK4_DIR/conf/nginx.conf
NGINX_PID_FILE=$OPENSHIFT_ROK4_DIR/run/nginx.pid

ROK4_BIN_DIR=/usr/bin/
ROK4_EXEC=$ROK4_BIN_DIR/rok4
ROK4_CONFIG_FILE=$OPENSHIFT_ROK4_DIR/conf/server.conf
ROK4_PID_FILE=$OPENSHIFT_ROK4_DIR/run/rok4.pid


function start() {
    echo "Starting Rok4 & Nginx"

    if [ -f "$NGINX_EXEC" ]; then

        if [ -f "$OPENSHIFT_REPO_DIR/nginx.conf.erb" ]; then
            oo-erb $OPENSHIFT_REPO_DIR/nginx.conf.erb > $OPENSHIFT_REPO_DIR/nginx.conf
        fi

        if [ -f "$OPENSHIFT_REPO_DIR/server.conf.erb" ]; then
            oo-erb $OPENSHIFT_REPO_DIR/server.conf.erb > $OPENSHIFT_REPO_DIR/server.conf
        fi

        

        # nginx will always use the prefix defined at compile time unless an absolute path to the conf file is given
        nohup "$NGINX_EXEC" -c "$NGINX_CONFIG_FILE" 2>&1
        [ "$?" == "0" ] && wait_for_pid_file $NGINX_PID_FILE
        nohup "$ROK4_EXEC" -f "$ROK4_CONFIG_FILE" > /dev/null 2>&1 &
        #[ "$?" == "0" ] && wait_for_pid_file $ROK4_PID_FILE

    else
        echo "WARN: Could not find the compiled application versions, will not start"
    fi
}


function stop() {
    echo "Stoping Nginx"

    if [ -f "$NGINX_PID_FILE" ]; then
        pid=`cat "$NGINX_PID_FILE" 2> /dev/null`
        eval "'$NGINX_EXEC' -c '$NGINX_CONFIG_FILE' -s stop"
        wait_for_stop $pid
    fi


    if [ -f "$ROK4_PID_FILE" ]; then
        pid=`cat "$ROK4_PID_FILE" 2> /dev/null`
        kill $pid
        wait_for_stop $pid
    else
        killall rok4
        [ "$?" == "0" ] || echo "rok4 could not be stopped"
    fi
}



function restart() {
    echo "Restarting Rok4 and Nginx"
    stop
    start
}


function status() {
    res=0
    output=$(curl -s -m 30 http://$OPENSHIFT_NGINX_IP:$OPENSHIFT_NGINX_PORT/ &> /dev/null) || res=1

    if [ $res -eq 0 ]
    then
        client_result "Nginx is running"
        client_result "$output"
    else
        client_result "Nginx is either stopped or inaccessible"
    fi
}


function reload() {
    echo "Reloading Nginx"

    if [ -f "$NGINX_PID_FILE" ]
    then
        pid=`cat "$NGINX_PID_FILE" 2> /dev/null`
        output=$("$NGINX_EXEC" -c "$NGINX_CONFIG_FILE" -s reload)
        client_result "$output"
    else
        client_result "Cannot reload Nginx as it is not running"
    fi
}


function tidy() {
    client_message "Emptying log dir: $OPENSHIFT_ROK4_DIR/logs"
    shopt -s dotglob
    rm -rf logs/*
}



case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
